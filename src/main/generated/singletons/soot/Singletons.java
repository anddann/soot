package soot;


import com.google.inject.AbstractModule;
import com.google.inject.Scope;
import com.google.inject.Scopes;

/*-
 * #%L
 * Soot - a J*va Optimization Framework
 * %%
 * Copyright (C) 2003 Ondrej Lhotak
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 2.1 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Lesser Public License for more details.
 * 
 * You should have received a copy of the GNU General Lesser Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/lgpl-2.1.html>.
 * #L%
 */

/* THIS FILE IS AUTOMATICALLY GENERATED FROM soot/singletons.xml DO NOT EDIT! */

/** A class to group together all the global variables in Soot. */
@javax.annotation.Generated(value = "Saxonica v3.0", comments = "from singletons.xml")
public class Singletons extends AbstractModule{


        
        protected void configure() {

        
            bind(soot.PhaseOptions.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.callgraph.VirtualCalls.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.fieldrw.FieldTagger.class).in(Scopes.SINGLETON);
            bind(soot.util.SharedBitSetCache.class).in(Scopes.SINGLETON);
            bind(soot.options.Options.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.callgraph.CHATransformer.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.graph.SlowPseudoTopologicalOrderer.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.invoke.SynchronizerManager.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.typing.integer.ClassHierarchy.class).in(Scopes.SINGLETON);
            bind(soot.Main.class).in(Scopes.SINGLETON);
            bind(soot.tagkit.TagManager.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.representations.Environment.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.representations.TypeConstants.class).in(Scopes.SINGLETON);
            bind(soot.coffi.Util.class).in(Scopes.SINGLETON);
            bind(soot.SourceLocator.class).in(Scopes.SINGLETON);
            bind(soot.coffi.CONSTANT_Utf8_collector.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.AbruptEdgeFinder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.base.Aggregator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.arraycheck.ArrayBoundsChecker.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.pag.ArrayElement.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.tags.ArrayNullTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.AST.ASTWalker.class).in(Scopes.SINGLETON);
            bind(soot.baf.Baf.class).in(Scopes.SINGLETON);
            bind(soot.BooleanType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.pre.BusyCodeMotion.class).in(Scopes.SINGLETON);
            bind(soot.ByteType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.CastCheckEliminatorDumper.class).in(Scopes.SINGLETON);
            bind(soot.CharType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.arraycheck.ClassFieldAnalysis.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.CommonSubexpressionEliminator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.ConditionalBranchFolder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.ConstantPropagatorAndFolder.class).in(Scopes.SINGLETON);
            bind(soot.grimp.toolkits.base.ConstructorFolder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.CopyPropagator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.graph.CriticalEdgeRemover.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.CycleFinder.class).in(Scopes.SINGLETON);
            bind(soot.dava.Dava.class).in(Scopes.SINGLETON);
            bind(soot.dava.DavaPrinter.class).in(Scopes.SINGLETON);
            bind(soot.xml.XMLPrinter.class).in(Scopes.SINGLETON);
            bind(soot.Printer.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.DeadAssignmentEliminator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.DependenceTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.coffi.Double2ndHalfType.class).in(Scopes.SINGLETON);
            bind(soot.DoubleType.class).in(Scopes.SINGLETON);
            bind(soot.baf.DoubleWordType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.DumbPointerAnalysis.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.sets.EmptyPointsToSet.class).in(Scopes.SINGLETON);
            bind(soot.ErroneousType.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.ExceptionFinder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.FieldRWTagger.class).in(Scopes.SINGLETON);
            bind(soot.FloatType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.FullObjectSet.class).in(Scopes.SINGLETON);
            bind(soot.grimp.Grimp.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.IfFinder.class).in(Scopes.SINGLETON);
            bind(soot.IntType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.Jimple.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.LabeledBlockFinder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.pre.LazyCodeMotion.class).in(Scopes.SINGLETON);
            bind(soot.tagkit.LineNumberTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.tagkit.InnerClassTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.LineNumberAdder.class).in(Scopes.SINGLETON);
            bind(soot.baf.toolkits.base.LoadStoreOptimizer.class).in(Scopes.SINGLETON);
            bind(soot.baf.toolkits.base.StoreChainOptimizer.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.LocalNameStandardizer.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.scalar.LocalPacker.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.scalar.LocalSplitter.class).in(Scopes.SINGLETON);
            bind(soot.coffi.Long2ndHalfType.class).in(Scopes.SINGLETON);
            bind(soot.LongType.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.misc.MonitorConverter.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.NopEliminator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.NullConstant.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.nullcheck.NullPointerChecker.class).in(Scopes.SINGLETON);
            bind(soot.NullType.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.misc.PackageNamer.class).in(Scopes.SINGLETON);
            bind(soot.PackManager.class).in(Scopes.SINGLETON);
            bind(soot.baf.toolkits.base.PeepholeOptimizer.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.profiling.ProfilingGenerator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.arraycheck.RectangularArrayFinder.class).in(Scopes.SINGLETON);
            bind(soot.RefType.class).in(Scopes.SINGLETON);
            bind(soot.Scene.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.SequenceFinder.class).in(Scopes.SINGLETON);
            bind(soot.shimple.Shimple.class).in(Scopes.SINGLETON);
            bind(soot.shimple.ShimpleTransformer.class).in(Scopes.SINGLETON);
            bind(soot.shimple.toolkits.scalar.SConstantPropagatorAndFolder.class).in(Scopes.SINGLETON);
            bind(soot.ShortType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.SideEffectTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.SparkTransformer.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.invoke.StaticInliner.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.invoke.StaticMethodBinder.class).in(Scopes.SINGLETON);
            bind(soot.StmtAddressType.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.SwitchFinder.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.finders.SynchronizedBlockFinder.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.misc.ThrowFinder.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.misc.ThrowNullConverter.class).in(Scopes.SINGLETON);
            bind(soot.Timers.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.AST.TryContentsFinder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.typing.TypeAssigner.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.UnconditionalBranchFolder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.ConstantCastEliminator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.IdentityCastEliminator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.FieldStaticnessCorrector.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.MethodStaticnessCorrector.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.IdentityOperationEliminator.class).in(Scopes.SINGLETON);
            bind(soot.UnknownType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.UnreachableCodeEliminator.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.scalar.UnusedLocalEliminator.class).in(Scopes.SINGLETON);
            bind(soot.coffi.UnusuableType.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.AST.UselessTryRemover.class).in(Scopes.SINGLETON);
            bind(soot.VoidType.class).in(Scopes.SINGLETON);
            bind(soot.baf.WordType.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.fieldrw.FieldReadTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.fieldrw.FieldWriteTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.fieldrw.FieldTagAggregator.class).in(Scopes.SINGLETON);
            bind(soot.EntryPoints.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.callgraph.CallGraphTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.nullcheck.NullPointerColorer.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.parity.ParityTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.methods.UnreachableMethodsTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.fields.UnreachableFieldsTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.qualifiers.TightestQualifiersTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.pointer.ParameterAliasTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.defs.ReachingDefsTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.liveness.LiveVarsTagger.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.graph.interaction.InteractionHandler.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.logic.LoopInvariantFinder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.AvailExprTagger.class).in(Scopes.SINGLETON);
            bind(soot.util.PhaseDumper.class).in(Scopes.SINGLETON);
            bind(soot.util.cfgcmd.AltClassLoader.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.exceptions.ThrowableSet.Manager.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.exceptions.UnitThrowAnalysis.class).in(Scopes.SINGLETON);
            bind(soot.dexpler.DalvikThrowAnalysis.class).in(Scopes.SINGLETON);
            bind(soot.dexpler.DexFileProvider.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.exceptions.PedanticThrowAnalysis.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.exceptions.TrapTightener.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.exceptions.DuplicateCatchAllTrapRemover.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.callgraph.CallGraphGrapher.class).in(Scopes.SINGLETON);
            bind(soot.SootResolver.class).in(Scopes.SINGLETON);
            bind(soot.javaToJimple.InitialResolver.class).in(Scopes.SINGLETON);
            bind(soot.jimple.paddle.PaddleHook.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.DominatorsTagger.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.purity.PurityAnalysis.class).in(Scopes.SINGLETON);
            bind(soot.javaToJimple.toolkits.CondTransformer.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.AST.transformations.UselessLabelFinder.class).in(Scopes.SINGLETON);
            bind(soot.dava.DavaStaticBlockCleaner.class).in(Scopes.SINGLETON);
            bind(soot.dava.toolkits.base.AST.traversals.ClosestAbruptTargetFinder.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.sets.AllSharedListNodes.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.sets.AllSharedHybridNodes.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.thread.synchronization.LockAllocator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.thread.mhp.MhpTransformer.class).in(Scopes.SINGLETON);
            bind(soot.JastAddInitialResolver.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.annotation.j5anno.AnnotationGenerator.class).in(Scopes.SINGLETON);
            bind(soot.sootify.TemplatePrinter.class).in(Scopes.SINGLETON);
            bind(soot.dexpler.DexResolver.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.scalar.EmptySwitchEliminator.class).in(Scopes.SINGLETON);
            bind(soot.toDex.SynchronizedMethodTransformer.class).in(Scopes.SINGLETON);
            bind(soot.toDex.TrapSplitter.class).in(Scopes.SINGLETON);
            bind(soot.toDex.FastDexTrapTightener.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.base.RenameDuplicatedClasses.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.typing.fast.Integer127Type.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.typing.fast.Integer1Type.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.typing.fast.Integer32767Type.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.typing.fast.BottomType.class).in(Scopes.SINGLETON);
            bind(soot.dexpler.TrapMinimizer.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.scalar.SmartLocalDefsPool.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.internal.PublicAndProtectedAccessibility.class).in(Scopes.SINGLETON);
            bind(soot.jimple.spark.internal.CompleteAccessibility.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.reflection.ConstantInvokeMethodBaseTransformer.class).in(Scopes.SINGLETON);
            bind(soot.jbco.jimpleTransformations.ClassRenamer.class).in(Scopes.SINGLETON);
            bind(soot.jbco.jimpleTransformations.MethodRenamer.class).in(Scopes.SINGLETON);
            bind(soot.LambdaMetaFactory.class).in(Scopes.SINGLETON);
            bind(soot.jbco.jimpleTransformations.FieldRenamer.class).in(Scopes.SINGLETON);
            bind(soot.validation.BodyValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.LocalsValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.ValueBoxesValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.UsesValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.IdentityStatementsValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.MethodValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.CheckVoidLocalesValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.InvokeArgumentValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.ReturnStatementsValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.CheckEscapingValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.JimpleTrapValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.TypesValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.TrapsValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.IdentityValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.UnitBoxesValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.NewValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.CheckInitValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.FieldRefValidator.class).in(Scopes.SINGLETON);
            bind(soot.validation.CheckTypesValidator.class).in(Scopes.SINGLETON);
            bind(soot.jimple.validation.InvokeValidator.class).in(Scopes.SINGLETON);
            bind(soot.toolkits.scalar.ConstantInitializerToTagTransformer.class).in(Scopes.SINGLETON);
            bind(soot.PrimTypeCollector.class).in(Scopes.SINGLETON);
            bind(soot.jimple.toolkits.callgraph.UnreachableMethodTransformer.class).in(Scopes.SINGLETON);

            }
}